# Apache Kafka with ACLs Configuration Examples
# This file contains configuration examples for Apache Kafka with ACLs
# Choose the appropriate configuration section based on your environment

# ==================================================
# DEVELOPMENT: SASL/PLAINTEXT Configuration (No SSL)
# ==================================================
# Use this configuration for local development with SASL but no SSL encryption

kafka.bootstrapServers=localhost:9092
kafka.groupId=camel-kafka-consumer-group-dev
kafka.topics=test.topic1,test.topic2,test.topic3

# Security Configuration - SASL/PLAINTEXT
kafka.securityProtocol=SASL_PLAINTEXT
kafka.saslMechanism=SCRAM-SHA-256
kafka.saslJaasConfig=org.apache.kafka.common.security.scram.ScramLoginModule required username='kafka-consumer-user' password='dev-password';

# Consumer Configuration
kafka.autoOffsetReset=earliest
kafka.enableAutoCommit=false
kafka.sessionTimeoutMs=45000
kafka.maxPollRecords=10
kafka.maxPollIntervalMs=300000
kafka.keyDeserializer=org.apache.kafka.common.serialization.StringDeserializer
kafka.valueDeserializer=org.apache.kafka.common.serialization.StringDeserializer
kafka.clientId=camel-kafka-consumer-dev-client
kafka.requestTimeoutMs=30000

# ==================================================
# PRODUCTION: SASL/SSL Configuration with Java Keystores
# ==================================================
# Use this configuration for production with full SSL encryption and ACLs

# kafka.bootstrapServers=kafka-broker1.example.com:9093,kafka-broker2.example.com:9093,kafka-broker3.example.com:9093
# kafka.groupId=camel-kafka-consumer-group-prod
# kafka.topics=ecs.AccessLogJsonV1,logs.application,events.user,metrics.system,alerts.critical

# Security Configuration - SASL/SSL
# kafka.securityProtocol=SASL_SSL
# kafka.saslMechanism=SCRAM-SHA-256
# kafka.saslJaasConfig=org.apache.kafka.common.security.scram.ScramLoginModule required username='kafka-consumer-user' password='prod-password';

# SSL Configuration with Java Keystores
# kafka.sslTruststoreLocation=/opt/kafka/config/ssl/kafka.client.truststore.jks
# kafka.sslTruststorePassword=truststore-password
# kafka.sslTruststoreType=JKS
# kafka.sslKeystoreLocation=/opt/kafka/config/ssl/kafka.client.keystore.jks
# kafka.sslKeystorePassword=keystore-password
# kafka.sslKeystoreType=JKS
# kafka.sslKeyPassword=key-password
# kafka.sslEndpointIdentificationAlgorithm=https

# Consumer Configuration
# kafka.autoOffsetReset=earliest
# kafka.enableAutoCommit=false
# kafka.sessionTimeoutMs=45000
# kafka.maxPollRecords=10
# kafka.maxPollIntervalMs=300000
# kafka.keyDeserializer=org.apache.kafka.common.serialization.StringDeserializer
# kafka.valueDeserializer=org.apache.kafka.common.serialization.StringDeserializer
# kafka.clientId=camel-kafka-consumer-prod-client
# kafka.requestTimeoutMs=60000

# ==================================================
# Alternative: Individual Topic Configuration
# ==================================================
# Instead of kafka.topics, you can use individual properties:
# kafka.topic1=ecs.AccessLogJsonV1
# kafka.topic2=logs.application  
# kafka.topic3=events.user
# kafka.topic4=metrics.system
# kafka.topic5=alerts.critical

# Spring Boot Configuration
spring.application.name=camel-kafka-consumer
server.port=8086

# Camel Configuration
camel.springboot.name=camel-kafka-consumer
camel.springboot.main-run-controller=true
camel.springboot.use-mdc-logging=true

# Logging Configuration
logging.level.com.dhi.camelkafka=INFO
logging.level.org.apache.camel=INFO
logging.level.org.apache.kafka=WARN
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
